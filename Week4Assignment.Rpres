Week4Assignment
========================================================
author: Raja
date: 28/1/2018
autosize: true

Indian 2009 2014 Elections Voting % Shiny Project
========================================================

- The project represents 2009 2014 Lok Sabha election 
- Data for State wise election poll % is got from www.data.gov.in
- Data for Lat Long of the Indian state capitals are got from www.mapmyindia.com
- The data is represented in a shiny application and interactive India map

How the shiny app is built
========================================================

- There is a sidebarlayout with a sidebarpanel and mainpanel
- The sidebarpanel has a list of Indian/State Union Territory Capitals as Radiobuttons
- The data for the radio button for the State/UT & capitals are loaded from the downloaded csv file
- On selection of the particular State UT in the radio button the appropriate state/UT voting % is populated as a comparitive histogram against the lat/long location of the State/UT in the Indian Map

How the application works
========================================================

- click on the slidebar panel with title panel 2009 2014 Lok Sabha Elections Voting % Comparison
- Click on the radio button you want to see the relative comparison of the voting % of the state/UT
- The shiny application is interspersed with a leaflet map and the mainpanel is shown as a leaflet map
- Once the particular radio button is selected the shiny server throws up the comparitive histogram in the Indian map against the State/UT capital(triangulated by lat/long) as a leaflet minichart
- setView is used to give the focus on the particular State/UT capital and show the comparitive histogram in 2 different colors
- URL to the application: https://rajajayaram.shinyapps.io/DPWeek4Assignment/

Shiny Presentation
========================================================

```{r,echo=FALSE}
library(shiny)
library(leaflet)
library(leaflet.minicharts)
library(htmltools)


df=read.csv2("Statewise polling Datacsv.csv",header=TRUE,sep=",")
content<-paste(df[1]$State.UT,df[2]$Capital)
newframe<-data.frame(lat=as.numeric(levels(df$Lat))[df$Lat],lng=as.numeric(levels(df$Long))[df$Long])
chartframe<-data.frame(as.numeric(levels(df$Percentage.of.votes.polled.2009))[df$Percentage.of.votes.polled.2009],as.numeric(levels(df$Percentage.of.votes.polled.2014))[df$Percentage.of.votes.polled.2014])
colnames(chartframe)<-c("2009 Voting %","2014 Voting %")
shinyApp(
ui= fluidPage(
  titlePanel("2009/2014 India Lok Sabha Elections Voting % Comparison"),
  sidebarLayout(
    sidebarPanel(style="overflow-y:scroll;max-height:600px;position:relative;",radioButtons("capital","Click on State/UT and Capital to get Voting%",c(content))),
    mainPanel(leafletOutput("Map1"))
)),

## Server Logic
server= function(input, output) {
  output$Map1 <- renderLeaflet({
  dist<- switch(input$capital,input$capital)
  df=read.csv2("Statewise polling Datacsv.csv",header=TRUE,sep=",")
    content<-paste(df[1]$State.UT,df[2]$Capital)
   newframe<-data.frame(lat=as.numeric(levels(df$Lat))[df$Lat],lng=as.numeric(levels(df$Long))[df$Long])
   chartframe<-data.frame(as.numeric(levels(df$Percentage.of.votes.polled.2009))[df$Percentage.of.votes.polled.2009],as.numeric(levels(df$Percentage.of.votes.polled.2014))[df$Percentage.of.votes.polled.2014])
    colnames(chartframe)<-c("2009 Voting %","2014 Voting %")
    combiframe<-data.frame(newframe,chartframe,content)
    for (i in 1:length(content))
    {
      if(content[i]==input$capital)
      {
        #print(i)
        break
      }
    }
    newframe%>%leaflet()%>%addTiles()%>%addCircles(~lng,~lat,popup=content[i],weight = 3, radius=40, 
                                                   color="red", stroke = TRUE, fillOpacity = 0.8) %>% 
      setView(lng=combiframe$lng[i],lat=combiframe$lat[i],zoom=7) %>%
      addCircleMarkers(combiframe$lng[i], combiframe$lat[i], label = ~htmlEscape(content[i]),labelOptions=labelOptions(textOnly=TRUE,direction="bottom")) %>% 
      addMinicharts(combiframe$lng[i],combiframe$lat[i], type="bar", chartdata = chartframe,showLabels=TRUE,legend=TRUE,width = 30, height = 40)
    
    })
  },
options= list(height=500)
)
```